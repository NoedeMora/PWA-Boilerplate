{"version":3,"sources":["components/calendar.js","components/calendarSource.js","components/calendarEvent.js"],"names":["dmx","Component","constructor","node","parent","this","onDateClick","bind","onEventClick","onSelect","parseSource","BaseComponent","call","attributes","timezone","type","String","default","date","locale","height","aspect-ratio","Number","view","views","Array","theme","hide-non-current-dates","Boolean","selectable","editable","methods","gotoDate","calendar","updateSize","prev","next","prevYear","nextYear","today","events","dateclick","MouseEvent","eventclick","select","Event","info","dispatchEvent","jsEvent","dateStr","allDay","event","getEventProps","start","startStr","end","endStr","child","register","render","plugins","filter","name","window","toUpperCase","slice","FullCalendar","Calendar","timeZone","props","defaultDate","defaultView","aspectRatio","themeSystem","dateClick","eventClick","header","left","center","right","toString","$parse","console","log","children","update","changeView","setOption","beforeDestroy","destroy","id","toISOString","title","source","parseEvents","error","initialData","color","background-color","border-color","text-color","class","overlap","refetch","success","failure","clone","isArray","forEach","prop","toCamelCase","push","set","addEventSource","Object","assign","equal","getEventSourceById","str","replace","a","b","all-day","group-id","rendering"],"mappings":"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","file":"../dmxCalendar/dmxCalendar.js","sourcesContent":["dmx.Component('calendar', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.onDateClick = this.onDateClick.bind(this);\r\n        this.onEventClick = this.onEventClick.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.parseSource = this.parseSource.bind(this);\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'timezone': { // moment-timezone or luxon plugin for named timezones\r\n            type: String,\r\n            default: 'local' // \"local\", \"UTC\"\r\n        },\r\n\r\n        'date': {\r\n            type: String,\r\n            default: null // ISO8601 format\r\n        },\r\n\r\n        'locale': { // locales include needed\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'height': { // height of entire calendar\r\n            type: String,\r\n            default: null // interger, \"parent\", \"auto\"\r\n        },\r\n\r\n        'aspect-ratio': { // width-to-height aspect ratio\r\n            type: Number,\r\n            default: 1.35\r\n        },\r\n\r\n        'view': { // dayGrid, timeGrid, list plugin\r\n            type: String,\r\n            default: null // name of view like \"dayGridMonth\"\r\n        },\r\n\r\n        'views': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'theme': { // bootstrap plugin\r\n            type: String,\r\n            default: 'standard' // \"standard\", \"bootstrap\"\r\n        },\r\n\r\n        'hide-non-current-dates': { // dayGrid plugin (dayGridMonth only)\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'selectable': { // interaction plugin\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'editable': { // interaction plugin\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        gotoDate: function(date) {\r\n            this.calendar.gotoDate(date);\r\n        },\r\n\r\n        updateSize: function() {\r\n            this.calendar.updateSize();\r\n        },\r\n\r\n        prev: function() {\r\n            this.calendar.prev();\r\n        },\r\n\r\n        next: function() {\r\n            this.calendar.next();\r\n        },\r\n\r\n        prevYear: function() {\r\n            this.calendar.prevYear();\r\n        },\r\n\r\n        nextYear: function() {\r\n            this.calendar.nextYear();\r\n        },\r\n\r\n        today: function() {\r\n            this.calendar.today();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        dateclick: MouseEvent, // interaction plugin\r\n        eventclick: MouseEvent,\r\n        select: Event\r\n    },\r\n\r\n    onDateClick: function(info) {\r\n        this.dispatchEvent('dateclick', info.jsEvent, {\r\n            date: info.dateStr,\r\n            allDay: info.allDay\r\n        });\r\n    },\r\n\r\n    onEventClick: function(info) {\r\n        this.dispatchEvent('eventclick', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onSelect: function(info) {\r\n        this.dispatchEvent('select', info.jsEvent, {\r\n            start: info.startStr,\r\n            end: info.endStr,\r\n            allDay: info.allDay\r\n        });\r\n    },\r\n\r\n    parseSource: function(child) {\r\n        if (child instanceof dmx.Component('calendar-source')) {\r\n            child.calendar = this.calendar;\r\n            child.register();\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        // detect installed plugins\r\n        var plugins = ['interaction', 'dayGrid', 'timeGrid', 'list', 'bootstrap', 'googleCalendar'].filter(function(name) {\r\n            return !!window['FullCalendar' + name[0].toUpperCase() + name.slice(1)];\r\n        });\r\n\r\n        this.calendar = new FullCalendar.Calendar(node, {\r\n            plugins: plugins,\r\n            timeZone: this.props.timezone,\r\n            defaultDate: this.props.date,\r\n            defaultView: this.props.view,\r\n            locale: this.props.locale,\r\n            height: this.props.height,\r\n            aspectRatio: this.props['aspect-ratio'],\r\n            themeSystem: this.props.theme,\r\n            selectable: this.props.selectable,\r\n            editable: this.props.editable,\r\n            dateClick: this.onDateClick,\r\n            eventClick: this.onEventClick,\r\n            select: this.onSelect,\r\n            header: {\r\n                left: 'today prev,next',\r\n                center: 'title',\r\n                right: this.props.views.toString()\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n\r\n        //this.children.forEach(this.parseSource);\r\n\r\n        console.log('children', this.children);\r\n\r\n        this.calendar.render();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.view != this.props.view) {\r\n            this.calendar.changeView(this.props.view || 'dayGridMonth');\r\n        }\r\n\r\n        if (props.date != this.props.date) {\r\n            this.calendar.gotoDate(this.props.date);\r\n        }\r\n\r\n        if (props.timezone != this.props.timezone) {\r\n            this.calendar.setOption('timeZone', this.props.timezone);\r\n        }\r\n\r\n        if (props.locale != this.props.locale) {\r\n            this.calendar.setOption('locale', this.props.locale);\r\n        }\r\n\r\n        if (props.theme != this.props.theme) {\r\n            this.calendar.setOption('themeSystem', this.props.theme);\r\n        }\r\n\r\n        if (props.selectable != this.props.selectable) {\r\n            this.calendar.setOption('selectable', this.props.selectable);\r\n        }\r\n\r\n        if (props.editable != this.props.editable) {\r\n            this.calendar.setOption('editable', this.props.editable);\r\n        }\r\n    },\r\n\r\n    beforeDestroy: function() {\r\n        this.calendar.destroy();\r\n    },\r\n\r\n    getEventProps: function(event) {\r\n        return {\r\n            id: event.id,\r\n            start: event.start && event.start.toISOString(),\r\n            end: event.end && event.end.toISOString(),\r\n            allDay: event.allDay,\r\n            title: event.title\r\n        };\r\n    }\r\n\r\n});","dmx.Component('calendar-source', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.parseEvents = this.parseEvents.bind(this);\r\n\r\n        if (parent instanceof dmx.Component('calendar')) {\r\n            this.calendar = parent.calendar;\r\n        } else {\r\n            console.error('calendar-source can only be child of calendar component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        id: null,\r\n        events: []\r\n    },\r\n\r\n    attributes: {\r\n        'events': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        refetch: function() {\r\n            this.refetch();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        success: Event,\r\n        failure: Event\r\n    },\r\n\r\n    parseEvents: function(info, success, failure) {\r\n        this.events = dmx.clone(this.props.events);\r\n\r\n        if (!Array.isArray(this.events)) {\r\n            this.events = [];\r\n        }\r\n\r\n        this.children.forEach(function(child) {\r\n            if (child instanceof dmx.Component('calendar-event')) {\r\n                var event = { id: child.name };\r\n\r\n                for (var prop in child.props) {\r\n                    if (child.props[prop] != null) {\r\n                        event[this.toCamelCase(prop)] = child.props[prop];\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }\r\n        }, this);\r\n\r\n        success(this.events);\r\n        \r\n        this.set('events', this.events);\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        console.log('source children', this.children);\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name\r\n        }, props, {\r\n            events: this.parseEvents\r\n        }));\r\n\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    update: function(props) {\r\n        //if (JSON.stringify(this.props.events) != JSON.stringify(props.events)) {\r\n        if (!dmx.equal(props.events, this.props.events)) {\r\n            console.log('update events', this.props.events);\r\n            this.refetch();\r\n        }\r\n    },\r\n\r\n    refetch: function() {\r\n        this.calendar.getEventSourceById(this.name).refetch();\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-event', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (!(parent instanceof dmx.Component('calendar-source'))) {\r\n            console.error('calendar-event can only be child of calendar-source component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'title': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'all-day': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'group-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'rendering': {\r\n            type: String, // background, inverse-background\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            if (this.parent.refetch) {\r\n                this.parent.refetch();\r\n            }\r\n        }\r\n    }\r\n\r\n});"]}